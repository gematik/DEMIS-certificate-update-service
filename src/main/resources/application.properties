cert.root.folder.path=${CERT_ROOT_FOLDER_PATH:data/certificates}
cert.target.folder.path=${CERT_TARGET_FOLDER_PATH:latest}
# volumes
cert.ca.file.path=${CERT_CA_FILE_PATH:config/D-TRUST_Limited_Basic_Root_CA_1_2019.crt}
cert.sub.ca.file.path=${CERT_SUB_CA_FILE_PATH:config/D-TRUST_Limited_Basic_CA_1-2_2019.crt}
cert.base.url=${CERT_BASE_URL:directory.d-trust.net}
cert.base.port=${CERT_BASE_PORT:389}

# Information for the /info Endpoint
info.app.name=@project.name@
info.app.version=@project.version@

# addresses
demis.network.keycloak-base-address=${KEYCLOAK_BASE_URL:http://keycloak:8080/}
demis.network.keycloak-token-address=${KEYCLOAK_TOKEN_URL:realms/master/protocol/openid-connect/token}
demis.network.keycloak-user-data-address=${KEYCLOAK_USERS_URL:admin/realms/OEGD/users}
# Keycloak login data - Using same Environment Var name as for Keycloak
keycloak.username=${KEYCLOAK_ADMIN:admin}
keycloak.password=${KC_ADMIN_PASSWORD:admin}
keycloak.clientId=${KEYCLOAK_CLIENTID:admin-cli}
keycloak.grantType=${KEYCLOAK_GRANTTYPE:password}
# special ids
rki.ids=${RKI_IDS:1.}

# Redis Configuration through Spring Data
spring.data.redis.host=${REDIS_HOST:redis-cus}
spring.data.redis.password=${REDIS_PW:}
spring.data.redis.username=${REDIS_USER:default}
spring.data.redis.port=${REDIS_PORT:6379}
spring.data.redis.repositories.enabled=true
spring.data.redis.client-type=lettuce
spring.data.redis.lettuce.pool.enabled=true
spring.data.redis.client-name=cert-update-svc
spring.data.redis.connect-timeout=5000
spring.data.redis.timeout=15000

# Operational Flags
# If true, the service will import certificates from the disk on startup, instead of fetching them from the LDAP and Keycloak server
feature.flag.import.from.disk=false